plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'
    id "net.ltgt.apt" version "0.10"

}

apply plugin: 'kotlin'
apply plugin: 'application'

group 'com.tubelli'
version '1.0-SNAPSHOT'

ext {
    ktor_version = '0.9.5'
    koin_version = '0.9.3'
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-gson:$ktor_version"

    compile "com.google.dagger:dagger:2.17"
    annotationProcessor 'com.google.dagger:dagger-compiler:2.17'

    compile "org.koin:koin-ktor:$koin_version"
    compile "org.koin:koin-core:$koin_version"

    compile("ch.qos.logback:logback-classic:1.2.3")
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}
// Define the main startup class and jar name
mainClassName = 'AppKt'
archivesBaseName = 'kotlin-microservice-sample'

// tell the jar which class to startup in.
jar {
    manifest {
        attributes 'Main-Class': 'AppKt'
    }

    archiveName = "app.jar"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

build.doLast {
    copy {
        from 'build/libs/app.jar'
        into "docker"
    }
}